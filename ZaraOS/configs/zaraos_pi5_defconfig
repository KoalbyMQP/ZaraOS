# ===================================================================
# ZaraOS Raspberry Pi 5 Buildroot Configuration
# ===================================================================
# Complete Buildroot defconfig for Raspberry Pi 5 targeting ML workloads
# and humanoid robotics applications.
#
# Documentation:
# - Buildroot Manual: https://buildroot.org/downloads/manual/manual.html
# - Pi 5 Support: https://buildroot.org/downloads/manual/manual.html#_raspberry_pi
# - Defconfig Format: https://buildroot.org/downloads/manual/manual.html#_using_buildroot_s_default_configurations
#
# Usage:
#   make BR2_EXTERNAL=/path/to/ZaraOS zaraos_pi5_defconfig
#   make menuconfig  # optional customization
#   make
#
# Target: Raspberry Pi 5 B (4GB/8GB models)
# Architecture: AArch64 (64-bit ARM)
# Kernel: 6.6.x (Raspberry Pi kernel fork)
# ===================================================================

# ┌─────────────────────────────────────────────────────────────────┐
# │ TARGET ARCHITECTURE                                             │
# └─────────────────────────────────────────────────────────────────┘

# 64-bit ARM architecture for Pi 5
BR2_aarch64=y

# Cortex-A76 CPU (Pi 5 specific) - enables optimizations
BR2_cortex_a76=y

# ┌─────────────────────────────────────────────────────────────────┐
# │ TOOLCHAIN CONFIGURATION                                         │
# └─────────────────────────────────────────────────────────────────┘

# Use Linux 6.6 headers (matching Pi 5 kernel version)
BR2_PACKAGE_HOST_LINUX_HEADERS_CUSTOM_6_6=y

# Enable C++ support for applications that need it
BR2_TOOLCHAIN_BUILDROOT_CXX=y

# ┌─────────────────────────────────────────────────────────────────┐
# │ BUILD SYSTEM CONFIGURATION                                      │
# └─────────────────────────────────────────────────────────────────┘

# Apply ZaraOS-specific patches
BR2_GLOBAL_PATCH_DIR="/workspace/ZaraOS/patches"

# Verify package hashes for security
BR2_DOWNLOAD_FORCE_CHECK_HASHES=y

# ┌─────────────────────────────────────────────────────────────────┐
# │ SYSTEM CONFIGURATION                                            │
# └─────────────────────────────────────────────────────────────────┘

# Enable DHCP on eth0 for automatic network configuration
BR2_SYSTEM_DHCP="eth0"

# Post-build script - sets up console and system tweaks
BR2_ROOTFS_POST_BUILD_SCRIPT="scripts/post-build.sh"

# Post-image script - generates final SD card image
BR2_ROOTFS_POST_IMAGE_SCRIPT="scripts/post-image.sh"

# ┌─────────────────────────────────────────────────────────────────┐
# │ LINUX KERNEL CONFIGURATION                                     │
# └─────────────────────────────────────────────────────────────────┘

# Enable Linux kernel build
BR2_LINUX_KERNEL=y

# Use custom tarball from Raspberry Pi kernel repository
BR2_LINUX_KERNEL_CUSTOM_TARBALL=y

# Specific Pi kernel commit - known stable version for Pi 5
# This version includes Pi 5 hardware support and optimizations
BR2_LINUX_KERNEL_CUSTOM_TARBALL_LOCATION="$(call github,raspberrypi,linux,576cc10e1ed50a9eacffc7a05c796051d7343ea4)/linux-576cc10e1ed50a9eacffc7a05c796051d7343ea4.tar.gz"

# Use Pi 5 specific kernel defconfig (bcm2712)
BR2_LINUX_KERNEL_DEFCONFIG="bcm2712"

# Apply custom kernel configuration fragment
# This enables 4K page size for better performance
BR2_LINUX_KERNEL_CONFIG_FRAGMENT_FILES="kernel-fragments/linux-4k-page-size.fragment"

# Enable device tree support
BR2_LINUX_KERNEL_DTS_SUPPORT=y

# Build Pi 5 device tree files
# bcm2712-rpi-5-b: Standard Pi 5 Model B
# bcm2712d0-rpi-5-b: Pi 5 revision D0 (if different)
BR2_LINUX_KERNEL_INTREE_DTS_NAME="broadcom/bcm2712-rpi-5-b broadcom/bcm2712d0-rpi-5-b"

# Kernel requires OpenSSL for module signing
BR2_LINUX_KERNEL_NEEDS_HOST_OPENSSL=y

# ┌─────────────────────────────────────────────────────────────────┐
# │ PACKAGE SELECTION                                               │
# └─────────────────────────────────────────────────────────────────┘

# Allow showing packages provided by BusyBox (for debugging)
BR2_PACKAGE_BUSYBOX_SHOW_OTHERS=y

# XZ compression utilities (useful for package management)
BR2_PACKAGE_XZ=y

# ┌─────────────────────────────────────────────────────────────────┐
# │ RASPBERRY PI FIRMWARE                                           │
# └─────────────────────────────────────────────────────────────────┘

# Raspberry Pi GPU firmware and bootloader
BR2_PACKAGE_RPI_FIRMWARE=y

# Use ZaraOS Pi 5 specific boot configuration
BR2_PACKAGE_RPI_FIRMWARE_CONFIG_FILE="boot-configs/config_5.txt"

# Use ZaraOS Pi 5 specific kernel command line
BR2_PACKAGE_RPI_FIRMWARE_CMDLINE_FILE="cmdlines/cmdline_5.txt"

# Don't install device tree overlays (reduces boot partition size)
# Enable if you need specific hardware overlays
# BR2_PACKAGE_RPI_FIRMWARE_INSTALL_DTB_OVERLAYS is not set

# ┌─────────────────────────────────────────────────────────────────┐
# │ KERNEL MODULE SUPPORT                                           │
# └─────────────────────────────────────────────────────────────────┘

# Kernel module utilities for dynamic module loading
BR2_PACKAGE_KMOD=y
BR2_PACKAGE_KMOD_TOOLS=y

# ┌─────────────────────────────────────────────────────────────────┐
# │ ROOT FILESYSTEM                                                 │
# └─────────────────────────────────────────────────────────────────┘

# Use EXT4 filesystem (better than EXT2/3 for flash storage)
BR2_TARGET_ROOTFS_EXT2=y
BR2_TARGET_ROOTFS_EXT2_4=y

# Root filesystem size - 120MB should be sufficient for base system
# Increase if adding many packages or large datasets
BR2_TARGET_ROOTFS_EXT2_SIZE="120M"

# Don't generate tar archive (not needed for Pi deployment)
# BR2_TARGET_ROOTFS_TAR is not set

# ┌─────────────────────────────────────────────────────────────────┐
# │ HOST TOOLS (for image generation)                              │
# └─────────────────────────────────────────────────────────────────┘

# Tools needed for creating FAT32 boot partition
BR2_PACKAGE_HOST_DOSFSTOOLS=y

# genimage tool for creating complete disk images
BR2_PACKAGE_HOST_GENIMAGE=y

# Support for XZ compressed kernel modules
BR2_PACKAGE_HOST_KMOD_XZ=y

# MTOOLS for manipulating FAT filesystems
BR2_PACKAGE_HOST_MTOOLS=y

# ===================================================================
# End of ZaraOS Pi 5 Configuration
#
# This configuration provides:
# ✓ Optimized 64-bit kernel for Pi 5 hardware
# ✓ Minimal root filesystem (~120MB)
# ✓ Network support with DHCP
# ✓ Serial console access 
# ✓ Complete SD card image generation
# ✓ Module loading support
# ✓ Secure build with hash verification
#
# To customize:
# 1. Run 'make menuconfig' after loading this defconfig
# 2. Add packages in 'Target packages' menu
# 3. Modify system settings in 'System configuration'
# 4. Save with 'make savedefconfig'
# ===================================================================