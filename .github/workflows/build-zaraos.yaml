name: Build ZaraOS

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  workflow_dispatch:
    inputs:
      clean_build:
        description: 'Force clean build (ignore cache)'
        type: boolean
        default: false

jobs:
  build-os:
    runs-on: [gideon, zaraos, builder]
    timeout-minutes: 180
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clean workspace
        if: github.event.inputs.clean_build == 'true'
        run: rm -rf output || true

      - name: Build ZaraOS
        run: |
          echo "Building ZaraOS"
          
          # Debug: Show current working directory and paths
          echo "Current working directory: $(pwd)"
          echo "Contents of current directory:"
          ls -la
          echo "External tree path will be: $(pwd)/ZaraOS"
          echo "Contents of external tree:"
          ls -la $(pwd)/ZaraOS/
          echo "Contents of configs directory:"
          ls -la $(pwd)/ZaraOS/configs/
          echo "external.desc file:"
          cat $(pwd)/ZaraOS/external.desc
          
          # Test what buildroot can see
          echo "Testing buildroot list-defconfigs:"
          echo "Contents of /opt/buildroot:"
          ls -la /opt/buildroot/
          echo "Checking if Makefile exists:"
          ls -la /opt/buildroot/Makefile || echo "No Makefile found"
          make -C /opt/buildroot BR2_EXTERNAL="$(pwd)/ZaraOS" list-defconfigs | grep zaraos || echo "zaraos defconfig not found in list"
          
          # Set up build directories
          BUILD_DIR="/tmp/zaraos-build"
          DL_DIR="/tmp/zaraos-dl"
          mkdir -p "$BUILD_DIR" "$DL_DIR" output
          
          # Configure buildroot
          make -C /opt/buildroot \
            O="$BUILD_DIR" \
            BR2_DL_DIR="$DL_DIR" \
            BR2_EXTERNAL="$(pwd)/ZaraOS" \
            zaraos_pi5_defconfig
          
          # Build the OS
          make -C /opt/buildroot \
            O="$BUILD_DIR" \
            BR2_DL_DIR="$DL_DIR" \
            BR2_EXTERNAL="$(pwd)/ZaraOS" \
            -j2
          
          # Copy artifacts
          if [ -d "$BUILD_DIR/images" ]; then
            echo "Copying build artifacts..."
            cp -r "$BUILD_DIR/images"/* output/
          fi
          
          echo "Build complete!"

      - name: Verify build artifacts
        run: |
          if [[ ! -f "output/sdcard.img" ]]; then
            echo "ERROR: Missing sdcard.img"
            exit 1
          fi
          echo "Build completed successfully"
          ls -la output/

      - name: Upload ZaraOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zaraos-build-${{ github.run_number }}
          path: |
            output/sdcard.img
            output/Image
            output/rootfs.ext4
            output/*.dtb
            output/boot.vfat
          retention-days: 30

      - name: Cleanup
        if: always()
        run: rm -rf tmp/ || true
