name: Build ZaraOS

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  workflow_dispatch:
    inputs:
      clean_build:
        description: 'Force clean build (ignore cache)'
        type: boolean
        default: false

jobs:
  build-os:
    runs-on: [gideon, zaraos, builder]
    timeout-minutes: 180

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup buildroot
        run: |
          echo "Copying buildroot submodule to /opt/buildroot"
          sudo rm -rf /opt/buildroot
          sudo cp -r ZaraOS/buildroot /opt/buildroot
          ls -la /opt/buildroot/

      - name: Clean workspace
        if: github.event.inputs.clean_build == 'true'
        run: rm -rf output || true

      - name: Build ZaraOS
        env:
          FORCE_UNSAFE_CONFIGURE: 1
        run: |
          echo "Building ZaraOS"

          # Set up build directories
          BUILD_DIR="/tmp/zaraos-build"
          DL_DIR="/tmp/zaraos-dl"
          mkdir -p "$BUILD_DIR" "$DL_DIR" output

          # Configure buildroot
          make -C /opt/buildroot \
            O="$BUILD_DIR" \
            BR2_DL_DIR="$DL_DIR" \
            BR2_EXTERNAL="$(pwd)/ZaraOS" \
            zaraos_pi5_defconfig

          # Build the OS
          make -C /opt/buildroot \
            O="$BUILD_DIR" \
            BR2_DL_DIR="$DL_DIR" \
            BR2_EXTERNAL="$(pwd)/ZaraOS" \
            -j2

          # Copy artifacts
          if [ -d "$BUILD_DIR/images" ]; then
            echo "Copying build artifacts..."
            cp -r "$BUILD_DIR/images"/* output/
          fi

          echo "Build complete!"

      - name: Verify build artifacts
        run: |
          if [[ ! -f "output/sdcard.img" ]]; then
            echo "ERROR: Missing sdcard.img"
            exit 1
          fi
          echo "Build completed successfully"
          ls -la output/

      - name: Upload ZaraOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zaraos-build-${{ github.run_number }}
          path: |
            output/sdcard.img
            output/Image
            output/rootfs.ext4
            output/*.dtb
            output/boot.vfat
          retention-days: 30

      - name: Generate release tag
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        id: tag
        run: |
          TIMESTAMP=$(date -u '+%Y%m%d-%H%M%S')
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-8)
          TAG="v${TIMESTAMP}-${SHORT_SHA}"
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "Generated release tag: ${TAG}"

      - name: Create ZaraOS Release
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: ZaraOS ${{ steps.tag.outputs.tag }}
          body: |
            ## ZaraOS Release ${{ steps.tag.outputs.tag }}

            Automated build from commit ${{ github.sha }}

            ### Build Information
            - **Branch**: main
            - **Commit**: ${{ github.sha }}
            - **Build Date**: ${{ github.event.head_commit.timestamp }}
            - **Build Number**: ${{ github.run_number }}

            ### Included Files
            - `sdcard.img` - Complete SD card image for Raspberry Pi
            - `Image` - Linux kernel image
            - `rootfs.ext4` - Root filesystem
            - `*.dtb` - Device tree blobs for various Pi models
            - `boot.vfat` - Boot partition image

            ### Installation
            Flash the `sdcard.img` to an SD card using tools like Raspberry Pi Imager or `dd`.
          files: |
            output/sdcard.img
            output/Image
            output/rootfs.ext4
            output/*.dtb
            output/boot.vfat
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup
        if: always()
        run: rm -rf tmp/ || true
